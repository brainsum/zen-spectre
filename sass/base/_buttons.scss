/**
 * @file
 * Button
 *
 * In addition to the default styling of `<button>` and
 * `<input type="submit|image|reset|button">` elements, the `.button` class and
 * its variants can apply buttons styles to various elements (like an `<a>`
 * link).
 *
 * :hover  - Hover styling.
 * :active - Depressed button styling.
 */


/* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

.button,
%button,
button,
// 1
html [type="button"],
[type="reset"],
[type="submit"] {
  -moz-appearance: button;
  -webkit-appearance: button; // 2
}

.button,
%button,
button,
[type="button"],
[type="reset"],
[type="submit"] {
  @extend %button--disabled;
  @include control-transition;
  // Some styles don"t apply to <a> links since they are inline elements by default.
  display: inline-block;
  // breaking the "appearance: button" styling on the input elements.
  text-decoration: none;
  // Improve usability and consistency of cursor style between image-type `input` and others.
  cursor: pointer;
  appearance: none;
  background: $bg-color-light;
  border: $border-width solid $primary-color;
  border-radius: $border-radius;
  color: $primary-color;
  font-size: $font-size;
  height: $control-size;
  line-height: $line-height;
  outline: none;
  padding: $control-padding-y $control-padding-x;
  text-align: center;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  // Remove the inner border and padding in Firefox.
  &::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }

  // Restore the focus styles unset by the previous rule.
  &:-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  &:focus {
    @include control-shadow;
  }

  &:focus,
  &:hover {
    background: $secondary-color;
    border-color: $primary-color-dark;
    text-decoration: none;
  }

  &:active,
  &.active {
    background: $primary-color-dark;
    border-color: darken($primary-color-dark, 5%);
    color: $light-color;
    text-decoration: none;

    &.loading {

      &::after {
        border-bottom-color: $light-color;
        border-left-color: $light-color;
      }

    }

  }
}

// Add button variations here.
.button,
%button {
  &--primary {
    background: $primary-color;
    border-color: $primary-color-dark;
    color: $light-color;

    &:focus,
    &:hover {
      background: darken($primary-color-dark, 2%);
      border-color: darken($primary-color-dark, 5%);
      color: $light-color;
    }

    &:active,
    &.active {
      background: darken($primary-color-dark, 4%);
      border-color: darken($primary-color-dark, 7%);
      color: $light-color;
    }

    &.loading {

      &::after {
        border-bottom-color: $light-color;
        border-left-color: $light-color;
      }

    }

  }

  // Button Colors
  &--success {
    @include button-variant($success-color);
  }

  &--error {
    @include button-variant($error-color);
  }

  // Button Link
  &--link {
    background: transparent;
    border-color: transparent;
    color: $link-color;

    &:focus,
    &:hover,
    &:active,
    &.active {
      color: $link-color-dark;
    }

  }

  // Button Sizes
  &--sm {
    font-size: $font-size-sm;
    height: $control-size-sm;
    padding: $control-padding-y-sm $control-padding-x-sm;
  }

  &--lg {
    font-size: $font-size-lg;
    height: $control-size-lg;
    padding: $control-padding-y-lg $control-padding-x-lg;
  }

  // Button Block
  &--block {
    display: block;
    width: 100%;
  }

  // Button Action
  &--action {
    width: $control-size;
    padding-left: 0;
    padding-right: 0;

    &--sm {
      width: $control-size-sm;
    }

    &--lg {
      width: $control-size-lg;
    }

  }

  // Button Clear
  &--clear {
    background: transparent;
    border: 0;
    color: currentColor;
    height: $unit-4;
    line-height: $unit-4;
    margin-left: $unit-1;
    margin-right: -2px;
    opacity: 1;
    padding: 0;
    text-decoration: none;
    width: $unit-4;

    &:hover {
      opacity: .95;
    }

    &::before {
      content: "\2715";
    }

  }
}

// The disabled variation should always go last, so that it overrides any
// other variations.
%button--disabled[disabled] {
  // Re-set default cursor for disabled elements.
  cursor: default;
  opacity: .5;
  pointer-events: none;
}

// Button groups
.button-group {
  display: inline-flex;
  flex-wrap: wrap;

  .button {
    flex: 1 0 auto;

    &:first-child:not(:last-child) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
      margin-left: -$border-width;
    }

    &:last-child:not(:first-child) {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
      margin-left: -$border-width;
    }

    &:focus,
    &:hover,
    &:active,
    &.active {
      z-index: $zindex-0;
    }

  }

  &.button-group-block {
    display: flex;

    .button {
      flex: 1 0 0;
    }

  }
}
