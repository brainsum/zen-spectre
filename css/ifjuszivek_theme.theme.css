@charset "UTF-8";
/*
 * @file
 * Theme
 * Purely visual styling (“look-and-feel”) for components.
 */
/*
 * @file
 * Sass Index file
 *
 * The main importer and orrganizer sass file.
 */
/*
 * @file
 ***** VARIABLES *****
 */
/*
** SPECTRE.CSS VARIABLES **
*/
/*
 * @file
 * Spectre Avatar mixin
 */
/*
 * @file
 * Spectre Button mixins
 */
/*
 * @file
 * Zen's clearfix()
 *
 * Allows the bottom of an element to extend to the bottom of all floated
 * children elements. @see http://nicolasgallagher.com/micro-clearfix-hack/
 *
 * We use the micro-clearfix, optimized for use in `@extend` where fewer `&` is
 * better.
 */
/*
 * @file
 * Spectre color mixins
 */
/*
 * @file
 * Spectre Label mixin
 */
/*
 * @file
 * Spectre Position mixins
 */
/*
 * @file
 * Spectre Shadow mixins
 */
/*
 * @file
 * Spectre Text ellipsis mixin
 */
/*
 * @file
 * Spectre Toast mixin
 */
/*
 * @file
 * Spectre Transition mixins
 */
/*
 * @file
 * visually-hidden()
 * Make an element visually hidden, but accessible to screen readers, etc.
 *
 * sass-lint:disable no-important
 *
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
/*
 * visually-hidden--off()
 *
 * Turns off the visually-hidden effect.
 */
/*
 * visually-hidden--focusable()
 *
 * Makes an element visually hidden by default, but visible when receiving
 * focus.
 */
/*
 * @file
 * image-url()
 *
 * If you include your images next to your component Sass files, you need to
 * specify a url() to point from the generated CSS to the Sass source like this:
 *
 * ```css
 * content: url(../sass/components/is-quite/long.svg);
 * ```
 *
 * With the `image-url()` function the path to all your components is assumed to
 * start with `../sass/components/` and you just need to give it the last, short
 * bit of the path in your Sass code like this:
 *
 * ```scss
 * content: image-url(is-quite/short.svg);
 * ```
 *
 * If you want to point at an image that is not in the components sub-directory
 * of your sass directory, you can override the default $subdirectory by
 * passing it in as the first parameter of `image-url()` like this:
 *
 * ```scss
 * content: image-url(base, grouping/blockquote.svg);
 * ```
 *
 * which would output `url(../sass/base/grouping/blockquote.svg)`.
 *
 * $subdirectory   = $image-url-subdirectory - Optional. The relative path from
 *                  the root of your Sass source to the sub-directory where
 *                  components usually lie.
 * $path           - Required. The path to the image relative to the
 *                  `$subdirectory`.
 * $path-to-source = $image-url-path-to-source - Optional. The relative path
 *                  from the css build directory to the sass source directory.
 */
/*
 * @file
 * Spectre Animations
 */
@-webkit-keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@-webkit-keyframes slide-down {
  0% {
    -webkit-transform: translateY(-1.6rem);
    transform: translateY(-1.6rem);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-down {
  0% {
    -webkit-transform: translateY(-1.6rem);
    transform: translateY(-1.6rem);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    opacity: 1;
  }
}

/*
 * @file
 * Drupal's Clearfix
 *
 * Allows the bottom of an element to extend to the bottom of all floated child
 * elements.
 *
 * @see http://nicolasgallagher.com/micro-clearfix-hack/
 */
.clearfix::before {
  display: table;
  content: "";
}

.clearfix::after {
  display: table;
  clear: both;
  content: "";
}

/*
 * @file
 * Spectre Colors
 *
 * Color utilities are used for changing colors for text, link and background.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#colors
 */
.text-primary {
  color: #5755d9;
}

a.text-primary:focus,
a.text-primary:hover {
  color: #4240d4;
}

.text-secondary {
  color: #e5e5f9;
}

a.text-secondary:focus,
a.text-secondary:hover {
  color: #d1d0f4;
}

.text-gray {
  color: #acb3c2;
}

a.text-gray:focus,
a.text-gray:hover {
  color: #9ea6b7;
}

.text-light {
  color: #fff;
}

a.text-light:focus,
a.text-light:hover {
  color: #f2f2f2;
}

.text-success {
  color: #32b643;
}

a.text-success:focus,
a.text-success:hover {
  color: #2da23c;
}

.text-warning {
  color: #ffb700;
}

a.text-warning:focus,
a.text-warning:hover {
  color: #e6a500;
}

.text-error {
  color: #e85600;
}

a.text-error:focus,
a.text-error:hover {
  color: #cf4d00;
}

.bg-primary {
  color: #fff;
  background: #5755d9;
}

.bg-secondary {
  background: #f1f1fc;
}

.bg-dark {
  color: #fff;
  background: #454d5d;
}

.bg-gray {
  background: #f8f9fa;
}

.bg-success {
  color: #fff;
  background: #32b643;
}

.bg-warning {
  color: #fff;
  background: #ffb700;
}

.bg-error {
  color: #fff;
  background: #e85600;
}

/*
 * @file
 * Spectre Cursor utilities
 *
 * Cursor utilities specify which mouse cursor to display when mouseover.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#cursors
 */
.c-hand {
  cursor: pointer;
}

.c-move {
  cursor: move;
}

.c-zoom-in {
  cursor: zoom-in;
}

.c-zoom-out {
  cursor: zoom-out;
}

.c-not-allowed {
  cursor: not-allowed;
}

.c-auto {
  cursor: auto;
}

/*
 * @file
 * Spectre Display utilities
 *
 * Display utilities are used for display and hidden things.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#display
 */
.d-block {
  display: block;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-flex {
  display: -webkit-box;
  display: flex;
}

.d-inline-flex {
  display: -webkit-inline-box;
  display: inline-flex;
}

.d-none,
.d-hide {
  display: none !important;
}

.d-visible {
  visibility: visible;
}

.d-invisible {
  visibility: hidden;
}

.text-hide {
  color: transparent;
  border: 0;
  background: transparent;
  text-shadow: none;
  font-size: 0;
  line-height: 0;
}

.text-assistive {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*
 * @file
 * Spectre Divider
 *
 * A Divider is used for separating elements.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#divider
 */
.divider,
.divider-vert {
  position: relative;
  display: block;
}

.divider[data-content]::after,
.divider-vert[data-content]::after {
  display: inline-block;
  padding: 0 0.4rem;
  content: attr(data-content);
  -webkit-transform: translateY(-0.65rem);
  -ms-transform: translateY(-0.65rem);
  transform: translateY(-0.65rem);
  color: #acb3c2;
  background: #fff;
  font-size: 0.7rem;
}

.divider {
  height: 0.05rem;
  margin: 0.4rem 0;
  border-top: 0.05rem solid #e7e9ed;
}

.divider[data-content] {
  margin: 0.8rem 0;
}

.divider-vert {
  display: block;
  padding: 0.8rem;
}

.divider-vert::before {
  position: absolute;
  top: 0.4rem;
  bottom: 0.4rem;
  left: 50%;
  display: block;
  content: " ";
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  border-left: 0.05rem solid #e7e9ed;
}

.divider-vert[data-content]::after {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 0.2rem 0;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

/*
 * @file
 * Spectre Loading
 *
 * Loading indicator is used for loading or updating. Also, you can add the
 * loading class to buttons for loading status.Loading indicator is used for
 * loading or updating. Also, you can add the loading class to buttons for
 * loading status.
 *
 * Add the loading-lg class for large size.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#loading
 */
.loading {
  position: relative;
  min-height: 0.8rem;
  pointer-events: none;
  color: transparent !important;
}

.loading::after {
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  display: block;
  width: 0.8rem;
  height: 0.8rem;
  margin-top: -0.4rem;
  margin-left: -0.4rem;
  content: "";
  -webkit-animation: loading 500ms infinite linear;
  animation: loading 500ms infinite linear;
  border: 0.1rem solid #5755d9;
  border-top-color: transparent;
  border-right-color: transparent;
  border-radius: 50%;
}

.loading.loading-lg {
  min-height: 2rem;
}

.loading.loading-lg::after {
  width: 1.6rem;
  height: 1.6rem;
  margin-top: -0.8rem;
  margin-left: -0.8rem;
}

/*
 * @file
 * Spectre Position utilities
 *
 * Position utilities are used for useful layout and position things,
 * including clearfix, float, position and margin/padding utilities.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#position
 */
.clearfix::before {
  display: table;
  content: "";
}

.clearfix::after {
  display: table;
  clear: both;
  content: "";
}

.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.centered {
  display: block;
  float: none;
  margin-right: auto;
  margin-left: auto;
}

.flex-centered {
  display: -webkit-box;
  display: flex;
  justify-content: center;
  align-items: center;

  -webkit-box-align: center;
  -webkit-box-pack: center;
}

.m-0 {
  margin: 0;
}

.mb-0 {
  margin-bottom: 0;
}

.ml-0 {
  margin-left: 0;
}

.mr-0 {
  margin-right: 0;
}

.mt-0 {
  margin-top: 0;
}

.mx-0 {
  margin-right: 0;
  margin-left: 0;
}

.my-0 {
  margin-top: 0;
  margin-bottom: 0;
}

.m-1 {
  margin: 0.2rem;
}

.mb-1 {
  margin-bottom: 0.2rem;
}

.ml-1 {
  margin-left: 0.2rem;
}

.mr-1 {
  margin-right: 0.2rem;
}

.mt-1 {
  margin-top: 0.2rem;
}

.mx-1 {
  margin-right: 0.2rem;
  margin-left: 0.2rem;
}

.my-1 {
  margin-top: 0.2rem;
  margin-bottom: 0.2rem;
}

.m-2 {
  margin: 0.4rem;
}

.mb-2 {
  margin-bottom: 0.4rem;
}

.ml-2 {
  margin-left: 0.4rem;
}

.mr-2 {
  margin-right: 0.4rem;
}

.mt-2 {
  margin-top: 0.4rem;
}

.mx-2 {
  margin-right: 0.4rem;
  margin-left: 0.4rem;
}

.my-2 {
  margin-top: 0.4rem;
  margin-bottom: 0.4rem;
}

.p-0 {
  padding: 0;
}

.pb-0 {
  padding-bottom: 0;
}

.pl-0 {
  padding-left: 0;
}

.pr-0 {
  padding-right: 0;
}

.pt-0 {
  padding-top: 0;
}

.px-0 {
  padding-right: 0;
  padding-left: 0;
}

.py-0 {
  padding-top: 0;
  padding-bottom: 0;
}

.p-1 {
  padding: 0.2rem;
}

.pb-1 {
  padding-bottom: 0.2rem;
}

.pl-1 {
  padding-left: 0.2rem;
}

.pr-1 {
  padding-right: 0.2rem;
}

.pt-1 {
  padding-top: 0.2rem;
}

.px-1 {
  padding-right: 0.2rem;
  padding-left: 0.2rem;
}

.py-1 {
  padding-top: 0.2rem;
  padding-bottom: 0.2rem;
}

.p-2 {
  padding: 0.4rem;
}

.pb-2 {
  padding-bottom: 0.4rem;
}

.pl-2 {
  padding-left: 0.4rem;
}

.pr-2 {
  padding-right: 0.4rem;
}

.pt-2 {
  padding-top: 0.4rem;
}

.px-2 {
  padding-right: 0.4rem;
  padding-left: 0.4rem;
}

.py-2 {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
}

/*
 * @file
 * Spectre Shape utilities
 *
 * Shape utilities are used for change element shapes.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#shapes
 */
.rounded {
  border-radius: 0.1rem;
}

.circle {
  border-radius: 50%;
}

/*
 * @file
 * Spectre Text utilities
 *
 * Text utilities are used for text alignment, styles and overflow things.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#text
 */
.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-normal {
  font-weight: normal;
}

.text-bold {
  font-weight: bold;
}

.text-italic {
  font-style: italic;
}

.text-large {
  font-size: 1.2em;
}

.text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.text-clip {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: clip;
}

.text-break {
  word-wrap: break-word;
  word-break: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;

  -ms-hyphens: auto;
}
