/**
* @file
* Basic styling
* CSS reset, HTML elements and any other very basic stuffs.
* all basic stuff is base subdirectory
 * base/normalize file is the importer file
*/
/**
 * @file
 * Sass Index file
 *
 * The main importer and orrganizer sass file.
 */
/**
 * @file
 * Variables
 */
/*
* Spectre.css variables *
*/
/**
 * @file
 * Spectre Avatar mixin
 */
/**
 * @file
 * Spectre Button mixins
 */
/**
 * @file
 * Zen's clearfix()
 *
 * Allows the bottom of an element to extend to the bottom of all floated
 * children elements. @see http://nicolasgallagher.com/micro-clearfix-hack/
 *
 * We use the micro-clearfix, optimized for use in `@extend` where fewer `&` is
 * better.
 */
/**
 *
 * @file
 * Spectre color mixins
 */
/**
 * @file
 * Spectre Label mixin
 */
/**
 * @file
 * Spectre Position mixins
 */
/**
 * @file
 * Spectre Shadow mixins
 */
/**
 * @file
 * Spectre Text ellipsis mixin
 */
/**
 * @file
 * Spectre Toast mixin
 */
/**
 * @file
 * Spectre Transition mixins
 */
/**
 * @file
 * visually-hidden()
 * Make an element visually hidden, but accessible to screen readers, etc.
 *
 * sass-lint:disable no-important
 *
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
/*
 * visually-hidden--off()
 *
 * Turns off the visually-hidden effect.
 */
/*
 * visually-hidden--focusable()
 *
 * Makes an element visually hidden by default, but visible when receiving
 * focus.
 */
/**
 * @file
 * image-url()
 *
 * If you include your images next to your component Sass files, you need to
 * specify a url() to point from the generated CSS to the Sass source like this:
 *
 * @code
 * content: url(../sass/components/is-quite/long.svg);
 * @endcode
 *
 * With the `image-url()` function the path to all your components is assumed to
 * start with `../sass/components/` and you just need to give it the last, short
 * bit of the path in your Sass code like this:
 *
 * @code
 * content: image-url(is-quite/short.svg);
 * @endcode
 *
 * If you want to point at an image that is not in the components sub-directory
 * of your sass directory, you can override the default $subdirectory by
 * passing it in as the first parameter of `image-url()` like this:
 *
 * @code
 * content: image-url(base, grouping/blockquote.svg);
 * @endcode
 *
 * which would output `url(../sass/base/grouping/blockquote.svg)`.
 *
 * $subdirectory   = $image-url-subdirectory - Optional. The relative path from
 *                  the root of your Sass source to the sub-directory where
 *                  components usually lie.
 * $path           - Required. The path to the image relative to the
 *                  `$subdirectory`.
 * $path-to-source = $image-url-path-to-source - Optional. The relative path
 *                  from the css build directory to the sass source directory.
 */
/**
 * @file
 * Spectre Animations
 */
@keyframes loading {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes slide-down {
  0% {
    transform: translateY(-1.6rem);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/**
 * @file
 * Drupal's Clearfix
 *
 * Allows the bottom of an element to extend to the bottom of all floated child
 * elements.
 *
 * @see http://nicolasgallagher.com/micro-clearfix-hack/
 */
.clearfix::before {
  display: table;
  content: "";
}

.clearfix::after {
  display: table;
  clear: both;
  content: "";
}

/**
 * @file
 * Spectre Colors
 *
 * Color utilities are used for changing colors for text, link and background.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#colors
 */
.text-primary {
  color: #5755d9;
}

a.text-primary:focus,
a.text-primary:hover {
  color: #4240d4;
}

.text-secondary {
  color: #e5e5f9;
}

a.text-secondary:focus,
a.text-secondary:hover {
  color: #d1d0f4;
}

.text-gray {
  color: #acb3c2;
}

a.text-gray:focus,
a.text-gray:hover {
  color: #9ea6b7;
}

.text-light {
  color: #fff;
}

a.text-light:focus,
a.text-light:hover {
  color: #f2f2f2;
}

.text-success {
  color: #32b643;
}

a.text-success:focus,
a.text-success:hover {
  color: #2da23c;
}

.text-warning {
  color: #ffb700;
}

a.text-warning:focus,
a.text-warning:hover {
  color: #e6a500;
}

.text-error {
  color: #e85600;
}

a.text-error:focus,
a.text-error:hover {
  color: #cf4d00;
}

.bg-primary {
  color: #fff;
  background: #5755d9;
}

.bg-secondary {
  background: #f1f1fc;
}

.bg-dark {
  color: #fff;
  background: #454d5d;
}

.bg-gray {
  background: #f8f9fa;
}

.bg-success {
  color: #fff;
  background: #32b643;
}

.bg-warning {
  color: #fff;
  background: #ffb700;
}

.bg-error {
  color: #fff;
  background: #e85600;
}

/**
 * @file
 * Spectre Cursor utilities
 *
 * Cursor utilities specify which mouse cursor to display when mouseover.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#cursors
 */
.c-hand {
  cursor: pointer;
}

.c-move {
  cursor: move;
}

.c-zoom-in {
  cursor: zoom-in;
}

.c-zoom-out {
  cursor: zoom-out;
}

.c-not-allowed {
  cursor: not-allowed;
}

.c-auto {
  cursor: auto;
}

/**
 * @file
 * Spectre Display utilities
 *
 * Display utilities are used for display and hidden things.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#display
 */
.d-block {
  display: block;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.d-none,
.d-hide {
  display: none !important;
}

.d-visible {
  visibility: visible;
}

.d-invisible {
  visibility: hidden;
}

.text-hide {
  color: transparent;
  border: 0;
  background: transparent;
  text-shadow: none;
  font-size: 0;
  line-height: 0;
}

.text-assistive {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/**
 * @file
 * Spectre Divider
 *
 * A Divider is used for separating elements.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#divider
 */
.divider,
.divider-vert,
hr {
  position: relative;
  display: block;
}

.divider[data-content]::after,
.divider-vert[data-content]::after,
hr[data-content]::after {
  display: inline-block;
  padding: 0 0.4rem;
  content: attr(data-content);
  -ms-transform: translateY(-0.65rem);
  transform: translateY(-0.65rem);
  color: #acb3c2;
  background: #fff;
  font-size: 0.7rem;
}

.divider,
hr {
  height: 0.05rem;
  margin: 0.4rem 0;
  border-top: 0.05rem solid #e7e9ed;
}

.divider[data-content],
hr[data-content] {
  margin: 0.8rem 0;
}

.divider-vert {
  display: block;
  padding: 0.8rem;
}

.divider-vert::before {
  position: absolute;
  top: 0.4rem;
  bottom: 0.4rem;
  left: 50%;
  display: block;
  content: " ";
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  border-left: 0.05rem solid #e7e9ed;
}

.divider-vert[data-content]::after {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 0.2rem 0;
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

/**
 * @file
 * Spectre Loading
 *
 * Loading indicator is used for loading or updating. Also, you can add the
 * loading class to buttons for loading status.Loading indicator is used for
 * loading or updating. Also, you can add the loading class to buttons for
 * loading status.
 *
 * Add the loading-lg class for large size.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#loading
 */
.loading {
  position: relative;
  min-height: 0.8rem;
  pointer-events: none;
  color: transparent !important;
}

.loading::after {
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  display: block;
  width: 0.8rem;
  height: 0.8rem;
  margin-top: -0.4rem;
  margin-left: -0.4rem;
  content: "";
  animation: loading 500ms infinite linear;
  border: 0.1rem solid #5755d9;
  border-top-color: transparent;
  border-right-color: transparent;
  border-radius: 50%;
}

.loading.loading-lg {
  min-height: 2rem;
}

.loading.loading-lg::after {
  width: 1.6rem;
  height: 1.6rem;
  margin-top: -0.8rem;
  margin-left: -0.8rem;
}

/**
 * @file
 * Spectre Position utilities
 *
 * Position utilities are used for useful layout and position things,
 * including clearfix, float, position and margin/padding utilities.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#position
 */
.clearfix::before {
  display: table;
  content: "";
}

.clearfix::after {
  display: table;
  clear: both;
  content: "";
}

.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.centered {
  display: block;
  float: none;
  margin-right: auto;
  margin-left: auto;
}

.flex-centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.m-0 {
  margin: 0;
}

.mb-0 {
  margin-bottom: 0;
}

.ml-0 {
  margin-left: 0;
}

.mr-0 {
  margin-right: 0;
}

.mt-0 {
  margin-top: 0;
}

.mx-0 {
  margin-right: 0;
  margin-left: 0;
}

.my-0 {
  margin-top: 0;
  margin-bottom: 0;
}

.m-1 {
  margin: 0.2rem;
}

.mb-1 {
  margin-bottom: 0.2rem;
}

.ml-1 {
  margin-left: 0.2rem;
}

.mr-1 {
  margin-right: 0.2rem;
}

.mt-1 {
  margin-top: 0.2rem;
}

.mx-1 {
  margin-right: 0.2rem;
  margin-left: 0.2rem;
}

.my-1 {
  margin-top: 0.2rem;
  margin-bottom: 0.2rem;
}

.m-2 {
  margin: 0.4rem;
}

.mb-2 {
  margin-bottom: 0.4rem;
}

.ml-2 {
  margin-left: 0.4rem;
}

.mr-2 {
  margin-right: 0.4rem;
}

.mt-2 {
  margin-top: 0.4rem;
}

.mx-2 {
  margin-right: 0.4rem;
  margin-left: 0.4rem;
}

.my-2 {
  margin-top: 0.4rem;
  margin-bottom: 0.4rem;
}

.p-0 {
  padding: 0;
}

.pb-0 {
  padding-bottom: 0;
}

.pl-0 {
  padding-left: 0;
}

.pr-0 {
  padding-right: 0;
}

.pt-0 {
  padding-top: 0;
}

.px-0 {
  padding-right: 0;
  padding-left: 0;
}

.py-0 {
  padding-top: 0;
  padding-bottom: 0;
}

.p-1 {
  padding: 0.2rem;
}

.pb-1 {
  padding-bottom: 0.2rem;
}

.pl-1 {
  padding-left: 0.2rem;
}

.pr-1 {
  padding-right: 0.2rem;
}

.pt-1 {
  padding-top: 0.2rem;
}

.px-1 {
  padding-right: 0.2rem;
  padding-left: 0.2rem;
}

.py-1 {
  padding-top: 0.2rem;
  padding-bottom: 0.2rem;
}

.p-2 {
  padding: 0.4rem;
}

.pb-2 {
  padding-bottom: 0.4rem;
}

.pl-2 {
  padding-left: 0.4rem;
}

.pr-2 {
  padding-right: 0.4rem;
}

.pt-2 {
  padding-top: 0.4rem;
}

.px-2 {
  padding-right: 0.4rem;
  padding-left: 0.4rem;
}

.py-2 {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
}

/**
 * @file
 * Spectre Shape utilities
 *
 * Shape utilities are used for change element shapes.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#shapes
 */
.rounded {
  border-radius: 0.1rem;
}

.circle {
  border-radius: 50%;
}

/**
 * @file
 * Spectre Text utilities
 *
 * Text utilities are used for text alignment, styles and overflow things.
 *
 * @see https://picturepan2.github.io/spectre/utilities.html#text
 */
.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-normal {
  font-weight: normal;
}

.text-bold {
  font-weight: bold;
}

.text-italic {
  font-style: italic;
}

.text-large {
  font-size: 1.2em;
}

.text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.text-clip {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: clip;
}

.text-break {
  word-wrap: break-word;
  word-break: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;

  -ms-hyphens: auto;
}

/**
 * @file
 * Font faces
 *
 * Instead of relying on the fonts that are available on a user's computer, you
 * can use web fonts which, like images, are resources downloaded to the user's
 * browser. Because of the bandwidth and rendering resources required, web fonts
 * should be used with care.
 *
 * Numerous resources for web fonts can be found on Google. Here are a few
 * websites where you can find Open Source fonts to download:
 * - http://www.fontsquirrel.com/fontface
 * - http://www.theleagueofmoveabletype.com
 *
 * In order to use these fonts, you will need to convert them into formats
 * suitable for web fonts. We recommend the free-to-use Font Squirrel's
 * Font-Face Generator:
 *  http://www.fontsquirrel.com/fontface/generator
 *
 * The following is an example @font-face declaration. This font can then be
 * used in any ruleset using a property like this:  font-family: Example, serif;
 *
 * Since we're using Sass, you'll need to declare your font faces here, then you
 * can add them to the font variables in the _init.scss partial.
 */
/*@font-face {
 font-family: 'Example';
 src: url('../fonts/example.eot');
 src: url('../fonts/example.eot?iefix') format('eot'),
   url('../fonts/example.woff') format('woff'),
   url('../fonts/example.ttf') format('truetype'),
   url('../fonts/example.svg#webfontOkOndcij') format('svg');
 font-weight: normal;
 font-style: normal;
}*/
/**
 * @file
 * Normalize.css is intended to be used as an alternative to CSS resets.
 *
 * @see http://nicolasgallagher.com/about-normalize-css/
 *
 * Also: @see http://meiert.com/en/blog/20080419/reset-style-sheets-are-bad/
 *       @see http://snook.ca/archives/html_and_css/no_css_reset/
 *
 * This directory is a slight fork of this original source:
 * - normalize-scss 5.0.3 | MIT/GPLv2 License | bit.ly/normalize-scss
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  box-sizing: border-box;
  /* 3 */
  min-height: 100%;
  font-family: sans-serif;
  font-size: 20px;
  line-height: 1.5;

  -webkit-tap-highlight-color: transparent;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 1 */
  -ms-text-size-adjust: 100%;
}

body {
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  color: #50596c;
  background: #fff;
  font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif;
  font-size: 0.8rem;

  text-rendering: optimizeLegibility;
}

/**
 * @file
 HTML5 display definitions
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section {
  display: block;
}

summary {
  display: list-item;
  outline: none;
}

audio,
canvas,
progress,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

progress {
  display: inline-block;
  vertical-align: baseline;
}

template,
[hidden] {
  display: none;
}

/**
 * @file
 * Links
 *
 * Hyperlinks are used to allow the user to navigate to other resources or to
 * download a resource.
 *
 * The order of link states are based on Eric Meyer's article:
 * http://meyerweb.com/eric/thoughts/2007/06/11/who-ordered-the-link-states
 *
 * :visited - A link that has already been visited.
 * :hover   - A link that is being hovered over.
 * :focus   - A link that has been given keyboard focus.
 * :active  - A link that is being actively clicked.
 */
a {
  text-decoration: none;
  color: #5755d9;
  outline: none;

  -webkit-text-decoration-skip: objects;
}

:visited {
  color: #5755d9;
}

a:focus {
  box-shadow: 0 0 0 0.1rem rgba(87, 85, 217, 0.2);
}

a:focus,
a:hover,
a:active,
a.active {
  text-decoration: underline;
  color: #4240d4;
}

a:active {
  color: #4240d4;
}

a:active:not(.button) {
  background-color: transparent;
}

a:active,
a:hover {
  outline-width: 0;
}

@media print {
  :link,
  :visited {
    text-decoration: underline;
  }
  a[href]:hover::after {
    content: " (" attr(href) ")";
    text-decoration: none;
    font-size: 0.8rem;
    font-weight: normal;
  }
  a[href^="javascript:"]::after,
  a[href^="javascript:"]::after,
  a[href^="#"]::after {
    content: " ";
  }
}

/**
 * @file
 * Headings
 *
 * All HTML headings, `<h1>` through `<h6>`, are available. `%h1` through `%h6`
 * classes are also available, for when you want to match the font styling of a
 * heading but still want your text to be displayed inline.
 */
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5em;
  color: inherit;
  font-weight: 500;
  line-height: 1.2;
}

.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-weight: 500;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.6rem;
}

h3 {
  font-size: 1.4rem;
}

h4 {
  font-size: 1.2rem;
}

h5 {
  font-size: 1rem;
}

h6 {
  font-size: 0.8rem;
}

/**
 * @file
 * Text-level semantics
 *
 * The elements in this section give semantics to inline text.
 */
/**
 * Abbreviation / Acroynym
 *
 * The `<abbr>` element makes the meanings of abbreviations and acronyms visible
 * on hover.
 */
abbr[title] {
  cursor: help;
  text-decoration: underline dotted;
  border-bottom: 0.05rem dotted;
}

@media print {
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
}

/**
 * Bold
 *
 * The `<strong>` element or the `<b>` element is for emphasizing a snippet of
 * text with a heavier font-weight.
 *
 * Feel free to use `<b>` in HTML5. `<b>` is meant to highlight words or phrases
 * without conveying additional importance.
 */
b,
strong {
  font-weight: inherit;
}

strong,
b {
  font-weight: bolder;
}

/*
 * Cite
 *
 * The `<cite>` element represents a reference to a creative work.
 */
/*cite {
  // Add your styles.
}*/
/**
 * Code
 *
 * The `<code>` element represents a fragment of computer code. The `<var>`
 * element represents a variable. The `<samp>` element represents (sample)
 * output from a program or computing system. The `<kbd>` element represents
 * user input (typically keyboard input.)
 */
pre,
code,
kbd,
samp,
var {
  font-family: "SF Mono", "Segoe UI Mono", "Roboto Mono", Menlo, Courier, monospace;
  font-size: 1em;
}

code {
  padding: 0.1rem 0.15rem;
  color: #e06870;
  border-radius: 0.1rem;
  background: #fdf4f4;
  font-size: 85%;
  line-height: 1.2;
}

.code {
  position: relative;
  color: #50596c;
  border-radius: 0.1rem;
}

.code::before {
  position: absolute;
  top: 0.1rem;
  right: 0.4rem;
  content: attr(data-lang);
  color: #acb3c2;
  font-size: 0.7rem;
}

.code code {
  display: block;
  overflow-x: auto;
  width: 100%;
  padding: 1rem;
  color: inherit;
  background: #f8f9fa;
  line-height: 1.5;
}

/*
 * Deleted text
 *
 * The `<del>` element indicates blocks of text that have been deleted.
 */
/*del {
  // Add your styles.
}*/
/*
 * Definition
 *
 * The `<dfn>` element represents the defining instance of a term.
 */
dfn {
  font-style: italic;
}

/**
 * Italics
 *
 * The `<em>` element or the `<i>` element is used for emphasizing a snippet of
 * text with italics.
 *
 * Feel free to use `<i>` element in HTML5. `<i>` is meant to convey voice,
 * technical terms, etc.
 */
/*i,
em {
  // Add your styles.
}*/
/*
 * Inserted text
 *
 * The `<ins>` element indicates additions to the document.
 */
/*ins {
  // Add your styles.
}*/
/*
 * Marked text
 *
 * The `<mark>` element highlights a run of text due to its relevance in another
 * context.
 */
mark {
  padding: 0.05rem;
  color: #50596c;
  border-radius: 0.1rem;
  background: #ffe9b3;
}

/**
 * Quote
 *
 * The `<q>` element represents an inline quote from another source. Longer
 * quotes should use the `<blockquote>` element.
 */
/*q {
  // Add your styles.
}*/
/**
 * Strikethrough text
 *
 * The `<s>` element indicates blocks of text that are no longer relevant.
*/
/*s {
  // Add your styles.
}*/
/**
 * Small text
 *
 * For de-emphasizing inline or blocks of text, use the `<small>` element to set
 * text at 80% the size of the parent.
 */
small {
  font-size: 80%;
  font-weight: 400;
  /* (added) */
}

/**
 * Superscript / Subscript
 *
 * The `<sup>` element represents a superscript and the `<sub>` element
 * represents a subscript.
 */
sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

a,
ins,
u {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

kbd {
  padding: 0.1rem 0.15rem;
  color: #fff;
  border-radius: 0.1rem;
  background: #454d5d;
  font-size: 0.7rem;
  line-height: 1.2;
}

/**
 * Underlined text
 *
 * To underline text use the `<u>` element. Not recommended since underlines are
 * used by web browsers to style hyperlinks.
 */
/*u {
  // Add your styles.
}*/
address {
  font-style: normal;
}

/**
 * @file
 * Grouping content
 */
/**
 * Block quotes
 *
 * The `<blockquote>` element is for quoting blocks of content from another
 * source within your document. Wrap the `<blockquote>` around any <abbr
 * title="HyperText Markup Language">HTML</abbr> as the quote. For straight
 * quotes, we recommend a `<p>`.
 *
 * Optionally, add a `<footer>` to identify the source of the quote, wrapping
 * the name of the source work in `<cite>`.
 */
blockquote {
  margin-left: 0;
  padding: 0.4rem 0.8rem;
  border-left: 0.1rem solid #e7e9ed;
}

blockquote p:last-child {
  margin-bottom: 0;
}

/**
 * Unordered list
 *
 * The `<ul>` element is a list of items in which the order does <em>not</em>
 * explicitly matter.
 */
/**
 * Ordered list
 *
 * The `<ol>` element is a list of items in which the order <em>does</em>
 * explicitly matter.
 */
/**
 * Description list
 *
 * The `<dl>` element is a list of terms with their associated descriptions.
 */
dl,
menu,
ol,
ul {
  margin: 0.8rem 0 0.8rem 0.8rem;
  padding: 0;
}

ol ol,
ol ul,
ul ol,
ul ul {
  margin: 0.8rem 0 0.8rem 0.8rem;
}

ol li,
ul li {
  margin-top: 0.4rem;
}

ul {
  list-style: disc inside;
}

ul ul {
  list-style-type: circle;
}

ol {
  list-style: decimal inside;
}

ol ol {
  list-style-type: lower-alpha;
}

dl dt {
  font-weight: bold;
}

dl dd {
  margin: 0.4rem 0 0.8rem;
}

/*dt {
  // Add your styles.
}*/
dd {
  margin: 0 0 0 0.4rem;
}

menu,
ol,
ul {
  padding: 0 0 0 0.4rem;
}

/**
 * Figures
 *
 * The `<figure>` element can be used to annotate illustrations, diagrams,
 * photos, code listings, etc.
 *
 * Optionally, a `<figcaption>` element inside the `<figure>` represents the
 * caption of the figure.
 */
figure {
  margin: 1rem 0;
}

/*figcaption {
  // Add your styles.
}*/
/**
 * Horizontal rule
 *
 * The `<hr>` element represents a paragraph-level thematic break, e.g. a scene
 * change in a story, or a transition to another topic within a section of a
 * reference book.
 */
hr {
  overflow: visible;
  box-sizing: content-box;
  height: 0;
}

/**
 * Body copy
 *
 * The default `font-size` and `line-height` properties are applied to the
 * `<body>` element and all paragraphs. In addition, `<p>` (paragraphs) receive
 * a top and bottom margin.
 */
p,
pre {
  margin: 0 0 1rem;
}

/**
 * Preformatted text
 *
 * The `<pre>` element represents a block of preformatted text, such as
 * fragments of computer code, ASCII art, etc.
 */
/**
 * @file
 * Embedded content
 *
 * Weight: 2
 *
 * Style guide: base.embedded
 *
 * Image
 *
 * An `<img>` element represents an image.
 */
img {
  border-style: none;
}

img,
svg {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

/* Scalable vector
 *
 * A `<svg>` element represents an image encoded as a Scalable Vector Graphic.
 *
 * Markup: embedded-svg.twig
 *
 * Style guide: base.embedded.svg
 */
svg:not(:root) {
  overflow: hidden;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * @file
 * Button
 *
 * In addition to the default styling of `<button>` and
 * `<input type="submit|image|reset|button">` elements, the `.button` class and
 * its variants can apply buttons styles to various elements (like an `<a>`
 * link).
 *
 * :hover  - Hover styling.
 * :active - Depressed button styling.
 */
/* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
.button,
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  -moz-appearance: button;
}

.button,
button,
[type="button"],
[type="reset"],
[type="submit"] {
  display: inline-block;
  height: 1.8rem;
  padding: 0.35rem 0.4rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition: all 0.2s ease;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;
  color: #5755d9;
  border: 0.05rem solid #5755d9;
  border-radius: 0.1rem;
  outline: none;
  background: #fff;
  font-size: 0.8rem;
  line-height: 1rem;

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.button::-moz-focus-inner,
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

.button:-moz-focusring,
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

.button:focus,
button:focus,
[type="button"]:focus,
[type="reset"]:focus,
[type="submit"]:focus {
  box-shadow: 0 0 0 0.1rem rgba(87, 85, 217, 0.2);
}

.button:focus,
.button:hover,
button:focus,
button:hover,
[type="button"]:focus,
[type="button"]:hover,
[type="reset"]:focus,
[type="reset"]:hover,
[type="submit"]:focus,
[type="submit"]:hover {
  text-decoration: none;
  border-color: #4b48d6;
  background: #f1f1fc;
}

.button:active,
.button.active,
button:active,
button.active,
[type="button"]:active,
[type="button"].active,
[type="reset"]:active,
[type="reset"].active,
[type="submit"]:active,
[type="submit"].active {
  text-decoration: none;
  color: #fff;
  border-color: #3634d2;
  background: #4b48d6;
}

.button:active.loading::after,
.button.active.loading::after,
button:active.loading::after,
button.active.loading::after,
[type="button"]:active.loading::after,
[type="button"].active.loading::after,
[type="reset"]:active.loading::after,
[type="reset"].active.loading::after,
[type="submit"]:active.loading::after,
[type="submit"].active.loading::after {
  border-bottom-color: #fff;
  border-left-color: #fff;
}

.button--primary {
  color: #fff;
  border-color: #4b48d6;
  background: #5755d9;
}

.button--primary:focus,
.button--primary:hover {
  color: #fff;
  border-color: #3634d2;
  background: #4240d4;
}

.button--primary:active,
.button--primary.active {
  color: #fff;
  border-color: #302ecd;
  background: #3a38d2;
}

.button--primary.loading::after,
.button--success.loading::after,
.button--error.loading::after {
  border-bottom-color: #fff;
  border-left-color: #fff;
}

.button--success {
  color: #fff;
  border-color: #2faa3f;
  background: #32b643;
}

.button--success:focus {
  box-shadow: 0 0 0 0.1rem rgba(50, 182, 67, 0.2);
}

.button--success:focus,
.button--success:hover {
  color: #fff;
  border-color: #2da23c;
  background: #30ae40;
}

.button--success:active,
.button--success.active {
  color: #fff;
  border-color: #278e34;
  background: #2a9a39;
}

.button--error {
  color: #fff;
  border-color: #d95000;
  background: #e85600;
}

.button--error:focus {
  box-shadow: 0 0 0 0.1rem rgba(232, 86, 0, 0.2);
}

.button--error:focus,
.button--error:hover {
  color: #fff;
  border-color: #cf4d00;
  background: #de5200;
}

.button--error:active,
.button--error.active {
  color: #fff;
  border-color: #b54300;
  background: #c44900;
}

.button--link {
  color: #5755d9;
  border-color: transparent;
  background: transparent;
}

.button--link:focus,
.button--link:hover,
.button--link:active,
.button--link.active {
  color: #4240d4;
}

.button--sm {
  height: 1.4rem;
  padding: 0.15rem 0.3rem;
  font-size: 0.7rem;
}

.button--lg {
  height: 2rem;
  padding: 0.45rem 0.6rem;
  font-size: 0.9rem;
}

.button--block {
  display: block;
  width: 100%;
}

.button--action {
  width: 1.8rem;
  padding-right: 0;
  padding-left: 0;
}

.button--action--sm {
  width: 1.4rem;
}

.button--action--lg {
  width: 2rem;
}

.button--clear {
  width: 0.8rem;
  height: 0.8rem;
  margin-right: -2px;
  margin-left: 0.2rem;
  padding: 0;
  text-decoration: none;
  opacity: 1;
  color: currentColor;
  border: 0;
  background: transparent;
  line-height: 0.8rem;
}

.button--clear:hover {
  opacity: 0.95;
}

.button--clear::before {
  content: "\2715";
}

[disabled].button,
button[disabled],
[disabled][type="button"],
[disabled][type="reset"],
[disabled][type="submit"] {
  cursor: default;
  pointer-events: none;
  opacity: 0.5;
}

.button-group {
  display: inline-flex;
  flex-wrap: wrap;
}

.button-group .button {
  flex: 1 0 auto;
}

.button-group .button:first-child:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.button-group .button:not(:first-child):not(:last-child) {
  margin-left: -0.05rem;
  border-radius: 0;
}

.button-group .button:last-child:not(:first-child) {
  margin-left: -0.05rem;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.button-group .button:focus,
.button-group .button:hover,
.button-group .button:active,
.button-group .button.active {
  z-index: 1;
}

.button-group.button-group-block {
  display: flex;
}

.button-group.button-group-block .button {
  flex: 1 0 0;
}

/**
 * @file
 * Form defaults
 *
 * These are the default base styles applied to HTML form elements.
 *
 * Component classes can override these styles, but if no class applies a
 * style to an HTML form element, these styles will be the ones displayed.
 *
 *
 * The following rules are from normalize.css and help to fix inconsistencies
 * across various browsers. You should probably leave these rules as is and
 * jump to the "Buttons" rule on line 92 before you start editing this file.
 *
 * sass-lint:disable no-vendor-prefixes, no-css-comments
 */
button,
input,
optgroup,
select,
textarea {
  box-sizing: border-box;
  max-width: 100%;
  /* 1 (changed) */
  margin: 0;
  font-family: inherit;
  /* 1 (changed) */
  font-size: inherit;
  /* 1 (changed) */
  line-height: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

input {
  overflow: visible;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  outline-offset: -2px;

  -webkit-appearance: textfield;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-input-placeholder {
  opacity: 0.54;
  color: inherit;
}

::-webkit-file-upload-button {
  font: inherit;

  -webkit-appearance: button;
}

/*
 * Buttons
 *
 * Buttons built with the `<button>` element are the most flexible for styling
 * purposes. But `<input>` elements with `type` set to `submit`, `image`,
 * `reset`, or `button` are also supported.
 *
 * Below is the default button styling. To see variations on the button styling
 * see the [button component](section-forms.html#kssref-forms-button).
 *
 * :hover        - Hover styling.
 * :active:hover - Depressed button styling.
 */
[type="text"],
[type="search"],
[type="tel"],
[type="url"],
[type="email"],
[type="password"],
[type="date"],
[type="time"],
[type="number"],
textarea {
  position: relative;
  display: block;
  width: 100%;
  max-width: 100%;
  height: 1.8rem;
  padding: 0.35rem 0.4rem;
  transition: all 0.2s ease;
  color: #50596c;
  border: 0.05rem solid #caced7;
  border-radius: 0.1rem;
  outline: none;
  background: #fff;
  background-image: none;
  font-size: 0.8rem;
  line-height: 1rem;

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

[type="text"]:focus,
[type="search"]:focus,
[type="tel"]:focus,
[type="url"]:focus,
[type="email"]:focus,
[type="password"]:focus,
[type="date"]:focus,
[type="time"]:focus,
[type="number"]:focus,
textarea:focus {
  border-color: #5755d9;
  box-shadow: 0 0 0 0.1rem rgba(87, 85, 217, 0.2);
}

[type="text"]:-ms-input-placeholder,
[type="search"]:-ms-input-placeholder,
[type="tel"]:-ms-input-placeholder,
[type="url"]:-ms-input-placeholder,
[type="email"]:-ms-input-placeholder,
[type="password"]:-ms-input-placeholder,
[type="date"]:-ms-input-placeholder,
[type="time"]:-ms-input-placeholder,
[type="number"]:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #acb3c2;
}

[type="text"]::placeholder,
[type="search"]::placeholder,
[type="tel"]::placeholder,
[type="url"]::placeholder,
[type="email"]::placeholder,
[type="password"]::placeholder,
[type="date"]::placeholder,
[type="time"]::placeholder,
[type="number"]::placeholder,
textarea::placeholder {
  color: #acb3c2;
}

/*
 * Inputs
 *
 * The `<input>` element is mostly used for text-based inputs that include the
 * HTML5 types: `text`, `search`, `tel`, `url`, `email`, `password`, `date`,
 * `time`, `number`, `range`, `color`, and `file`.
 */
[type="text"]:disabled,
[type="search"]:disabled,
[type="tel"]:disabled,
[type="url"]:disabled,
[type="email"]:disabled,
[type="password"]:disabled,
[type="date"]:disabled,
[type="time"]:disabled,
[type="number"]:disabled {
  cursor: not-allowed;
  opacity: 0.5;
  background-color: #f0f1f4;
}

[type="text"]:disabled + .form-icon,
[type="search"]:disabled + .form-icon,
[type="tel"]:disabled + .form-icon,
[type="url"]:disabled + .form-icon,
[type="email"]:disabled + .form-icon,
[type="password"]:disabled + .form-icon,
[type="date"]:disabled + .form-icon,
[type="time"]:disabled + .form-icon,
[type="number"]:disabled + .form-icon {
  cursor: not-allowed;
  opacity: 0.5;
  background: #f0f1f4;
}

[type="text"][readonly],
[type="search"][readonly],
[type="tel"][readonly],
[type="url"][readonly],
[type="email"][readonly],
[type="password"][readonly],
[type="date"][readonly],
[type="time"][readonly],
[type="number"][readonly] {
  background-color: #f8f9fa;
}

[type="file"] {
  height: auto;
}

[size],
[multiple] {
  height: auto;
}

[size] option,
[multiple] option {
  padding: 0.1rem 0.2rem;
}

/*
 * Checkboxes
 *
 * If an `<input>` element has the `type='checkbox'` attribute set, the form
 * field is displayed as a checkbox.
 *
 * It's recommended that you don't attempt to style these elements. Firefox's
 */
/*
 * Radio buttons
 *
 * If an `<input>` element has the `type='radio'` attribute set, the form field
 * is displayed as a radio button.
 *
 * It's recommended that you don't attempt to style these elements. Firefox's
 * Implementation doesn't respect `box-sizing`, `padding`, or `width`.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

/*
 * Fieldsets
 *
 * The `<fieldset>` element groups a set of form fields, optionally under a
 * common name given by the `<legend>` element.
 *
 * Markup: forms-fieldset.twig
 *
 * Style guide: forms.base.fieldset
 */
fieldset {
  margin: 0;
  margin-bottom: 0.8rem;
  padding: 0;
  padding: 0.35rem 0.625rem 0.65rem;
  border: 0;
}

legend {
  display: table;
  box-sizing: border-box;
  max-width: 100%;
  margin-bottom: 0.8rem;
  margin-left: -5px;
  padding: 0 5px;
  white-space: normal;
  color: inherit;
  font-size: 0.9rem;
  font-weight: 500;
}

/*
 * Labels
 *
 * The `<label>` element represents a caption of a form field. The label can be
 * associated with a specific form control by using the `for` attribute or by
 * putting the form control inside the label element itself.
 */
label {
  display: block;
  padding: 0.4rem 0;
  line-height: 1rem;
}

/*
 * Select list
 *
 * The `<select>` element represents a form field for selecting amongst a set of
 * options.
 *
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `<select>`, unless a `border` property is set.
 */
select {
  width: 100%;
  height: 1.8rem;
  padding: 0.35rem 0.4rem;
  vertical-align: middle;
  color: inherit;
  border: 0.05rem solid #caced7;
  border-radius: 0.1rem;
  outline: none;
  font-size: 0.8rem;
  line-height: 1rem;

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

select:focus {
  border-color: #5755d9;
  box-shadow: 0 0 0 0.1rem rgba(87, 85, 217, 0.2);
}

select::-ms-expand {
  display: none;
}

select:not([multiple]):not([size]) {
  padding-right: 1.2rem;
  background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%204%205'%3E%3Cpath%20fill='%23667189'%20d='M2%200L0%202h4zm0%205L0%203h4z'/%3E%3C/svg%3E") no-repeat right 0.35rem center/0.4rem 0.5rem;
}

optgroup {
  font-weight: bold;
}

/*
 * Text areas
 *
 * The `<textarea>` element represents a multi-line plain text form field.
 */
textarea {
  overflow: auto;
  height: auto;
}

/**
 * @file
 * Tables
 *
 * The `<table>` element displays tabular data in rows, columns, and cells.
 */
table {
  width: 100%;
  margin: 1rem 0;
  border-spacing: 0;
  text-align: left;
  border-collapse: collapse;
}

table.table-striped tbody tr:nth-of-type(odd) {
  background: #f8f9fa;
}

table tbody tr.active,
table.table-striped tbody tr.active {
  background: #f0f1f4;
}

table.table-hover tbody tr:hover {
  background: #f0f1f4;
}

table.table-scroll {
  display: block;
  overflow-x: auto;
  padding-bottom: 0.75rem;
  white-space: nowrap;
}

td,
th {
  padding: 0.6rem 0.4rem;
  border-bottom: 0.05rem solid #e7e9ed;
}

th {
  border-bottom-width: 0.1rem;
}

/*# sourceMappingURL=zen_spectre_starterkit.base.css.map */
